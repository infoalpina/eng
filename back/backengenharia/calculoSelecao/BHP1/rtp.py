def analise_5700(Z, F, J9, N1, V, R1, S, W, R3, A, J6, D6, R):
    Z0 = 1.76
    F1 = F[J9, N1]
    W1 = V/F(J9, N1)
    D2 = Z0*W1 ^ 2*R1/2
    if S[J9, 2] != 2:
        Z0 = 4
        D2 = Z0*W ^ 2*R3/2
    Z1 = 0
    for J in range(1, 4):
        Z1 = Z1+A(J6, J+5)*W ^ (J-1)
    Z1 = Z1+A(J6, 10)*(R-10)
    D3 = Z1*W ^ 2*R3/2
    D4 = D2+D3+D6
    return


def analise_5860(Z, C0, L, H1, P0, J7, J9, R, A, N1, H, K, M, K0):
    T9 = T2
    T8 = T1
    D5 = D1
    D1 = 100
    U8 = T2
    U9 = D
    T7 = 0.4
    V9 = 1
    if D5 < 100:
        V9 = -1
    V9 = -1
    T7 = T7*V9
    while True:
        T1 = T1+T7
        T2 = T2+T7
        analise_4880(T1, T2, C0, L, H1, P0)
        analise_5200(K, J7, J9, R, A, N1, H, Z, D1, L)
        D = K*100/(L**M*K0)
        V8 = 1
        if D < 100:
            V8 = -1
        if V8 != V9:
            U6 = (U8-T2)/(U9-D)
            U5 = U8-U6*U9
            U7 = U6*100+U5-T9
            T1 = T8
            T2 = T9
            D1 = D5
            analise_4880(T1, T2, C0, L, H1, P0)
            As = analise_5200(K, J7, J9, R, A, N1, H, Z, D1, L)
            D = K*100/(L**M*K0)
        U8 = T2
        U9 = D
        return [U7, As]


def analise_5200(K, J7, J9, R, A, N1, H, Z, D1, L):
    for J in range(0., 9):
        if K[J9][J7] == A[J][11]:
            K0 = 0
            J6 = J
            for J in range(1, 4):
                K0 = K0+A(J6, J)*R ^ (J-1)
                analise_5610(N1, J7, H, J9, R)
                analise_5670(Z)
                K0 = K0*D1/100
                M = A(J6, 5)
                K3 = K0*L ^ M
                if A(J6, 11) == 11:
                    As = "SG   H=450"
                if A(J6, 11) == 12:
                    As = "RTP (22)"
                if A(J6, 11) == 13:
                    As = "SG    H=1350"
                if A(J6, 11) == 14:
                    As = "SG    H=1800"
                if A(J6, 11) == 15:
                    As = "SG   H=2250"
                if A(J6, 11) == 23:
                    As = "RTP (14)"
                if A(J6, 11) == 24:
                    As = "A-12  H=1200"
                if A(J6, 11) == 25:
                    As = "A-12  H=1500"
    return As


def analise_5610(N1, J7, H, J9, R):
    I6 = (N1-1)*8+J7
    H0 = H[J9, I6]
    F9 = .278867+.0789667*R-3.04544E-03*R*R+2.80292E-05*R*R*R
    K0 = K0+F9*(H0-8.5)/(H0*1.82+8.5)
    return


def analise_5670(Z):
    K0 = K0*(1-.007*(Z-10))
    return


def analise_4880(T1, T2, C0, L, H1, P0):
    Z = T1-T2
    N = int((Z/2+5)/2)*2+1
    D9 = Z/(N-1)
    D8 = D9*C0/L
    K = 0
    for J in range(0, N):
        T0 = T2+D9*(J-1)
        H7 = H1+D8*(J-1)
        L9 = T0
        L8 = T0
        L7 = 100
        L6 = P0
        L5 = 0
        analise_2030(L5, L6, L7, L8, L9)
    return


def analise_4580(K9, P0):
    K8 = K9/1.5-6
    if K9 >= 2:
        I5 = 0
        L8 = K9**.15*46-63
        L9 = (P0/1013)**0.5
        A1 = 95*(P0/1013)**0.3
        K8 = L8*L9
        if K8 >= A1:
            K8 = A1
    while True:
        I5 = I5+1
        if I5 < 50:
            L8 = K8
            L9 = K8
            L7 = 100
            L6 = P0
            L5 = 0
            analise_2030(L5, L6, L7, L8, L9)
        return


def analise_2030(L5, L6, L7, L8, L9):
    if L6 == 0 and L5 != 0:
        L4 = ((288-6.5*L5/1000)/288)**5.255
        L6 = 1013.25*L4
    elif L5 == 0:
        L6 = 1013.25
    # calcula L9 == 0
    if L9 == 0:
        print('teste1')
        # 2240
        I5 = 0
        M8 = -50
        M9 = 100
        L9 = L8+2
        J = 0
        while J == 0:
            P8 = L9
            A1 = (7.4412-((67-P8)/420)**2)*P8/(P8+235)
            P9 = 6.1075*10**A1
            if P8 >= 67:
                A1 = (79.5-P8)**2/1.1-99
                P9 = P9+A1*9.807201*10**(-4)
            P5 = P9
            P8 = L8
            A1 = (7.4412-((67-P8)/420)**2)*P8/(P8+235)
            P9 = 6.1075*10**A1
            if P8 >= 67:
                print(2930)
                A1 = (79.5-P8)**2/1.1-99
                P9 = P9+A1*9.807201*10**(-4)
            P6 = P9
            A1 = 0.667
            if L8 < 0:
                A1 = .573
            P7 = P6-A1*(L9-L8)*L6/1006.7
            L3 = 0.622*P7/(L6-P7)
            L1 = P7/P5*100
            A1 = 2501.6+1.86*L9
            L4 = 1.006*L9+L3*A1
            L2 = .3483*L6/(L9+273.15)-.1316*P7/(L9+273.15)
            if abs(L1-L7) > 0.01:
                if L7 > L1:
                    M9 = L9
                else:
                    M8 = L9
                L9 = (M9+M8)/2
                if L9 < L8:
                    L9 = L8+1
                I5 = I5+1
                D9 = M9-M8
            if I5 > 50 or D9 < .001 or abs(L1-L7) < .01:
                J = 1
            print(J)

    # calcula L8 == 0
    elif L8 == 0:
        print('teste2')
        # 2480
        if L7 == 0:
            I5 = 0
            M8 = -50
            M9 = 100
            L9 = L8+2
            J = 0
            while J == 0:
                P8 = L9
                A1 = (7.4412-((67-P8)/420)**2)*P8/(P8+235)
                P9 = 6.1075*10**A1
                if P8 >= 67:
                    print(2930)
                    A1 = (79.5-P8)**2/1.1-99
                    P9 = P9+A1*9.807201*10**(-4)
                P5 = P9
                P8 = L8
                A1 = (7.4412-((67-P8)/420)**2)*P8/(P8+235)
                P9 = 6.1075*10**A1
                if P8 >= 67:
                    print(2930)
                    A1 = (79.5-P8)**2/1.1-99
                    P9 = P9+A1*9.807201*10**(-4)
                P6 = P9
                A1 = 0.667
                if L8 < 0:
                    A1 = .573
                P7 = P6-A1*(L9-L8)*L6/1006.7
                L3 = 0.622*P7/(L6-P7)
                L1 = P7/P5*100
                A1 = 2501.6+1.86*L9
                L4 = 1.006*L9+L3*A1
                L2 = .3483*L6/(L9+273.15)-.1316*P7/(L9+273.15)
                if abs(L1-L7) > 0.01:
                    if L7 > L1:
                        M9 = L9
                    else:
                        M8 = L9
                    L9 = (M9+M8)/2
                    if L9 < L8:
                        L9 = L8+1
                    I5 = I5+1
                    D9 = M9-M8

                if I5 > 50 or D9 < .001 or abs(L1-L7) < .01:
                    J = 1
                    print(J)

        elif L7 != 0:
            I5 = 0
            M8 = -50
            M9 = L9
            L8 = L9-2
            while J == 0:
                P8 = L9
                A1 = (7.4412-((67-P8)/420)**2)*P8/(P8+235)
                P9 = 6.1075*10**A1
                if P8 >= 67:
                    print(2930)
                    A1 = (79.5-P8)**2/1.1-99
                    P9 = P9+A1*9.807201*10**(-4)
                P5 = P9
                P8 = L8
                A1 = (7.4412-((67-P8)/420)**2)*P8/(P8+235)
                P9 = 6.1075*10**A1
                if P8 >= 67:
                    print(2930)
                    A1 = (79.5-P8)**2/1.1-99
                    P9 = P9+A1*9.807201*10**(-4)
                P6 = P9
                A1 = 0.667
                if L8 < 0:
                    A1 = .573
                P7 = P6-A1*(L9-L8)*L6/1006.7
                L3 = 0.622*P7/(L6-P7)
                L1 = P7/P5*100
                A1 = 2501.6+1.86*L9
                L4 = 1.006*L9+L3*A1
                L2 = .3483*L6/(L9+273.15)-.1316*P7/(L9+273.15)
                if abs(L1-L7) > 0.01:
                    if L7 < L1:
                        M9 = L8
                    else:
                        M8 = L8
                    L9 = (M9+M8)/2
                    if L8 >= L9:
                        L8 = L9-1
                    D9 = M9-M8
                    I5 = I5+1
                    if D9 > .001:
                        I5 = I5+1
                    D9 = M9-M8

                if I5 > 50 or D9 < .001 or abs(L1-L7) < .01:
                    J = 1
                    print(J)

    # calcula L9<L8
    elif L9 < L8:
        print('teste3')
        # 2240
        I5 = 0
        M8 = -50
        M9 = 100
        L9 = L8+2
        J = 0
        while J == 0:
            P8 = L9
            A1 = (7.4412-((67-P8)/420)**2)*P8/(P8+235)
            P9 = 6.1075*10**A1
            if P8 >= 67:
                A1 = (79.5-P8)**2/1.1-99
                P9 = P9+A1*9.807201*10**(-4)
            P5 = P9
            P8 = L8
            A1 = (7.4412-((67-P8)/420)**2)*P8/(P8+235)
            P9 = 6.1075*10**A1
            if P8 >= 67:
                print(2930)
                A1 = (79.5-P8)**2/1.1-99
                P9 = P9+A1*9.807201*10**(-4)
            P6 = P9
            A1 = 0.667
            if L8 < 0:
                A1 = .573
            P7 = P6-A1*(L9-L8)*L6/1006.7
            L3 = 0.622*P7/(L6-P7)
            L1 = P7/P5*100
            A1 = 2501.6+1.86*L9
            L4 = 1.006*L9+L3*A1
            L2 = .3483*L6/(L9+273.15)-.1316*P7/(L9+273.15)
            if abs(L1-L7) > 0.01:
                if L7 > L1:
                    M9 = L9
                else:
                    M8 = L9
                L9 = (M9+M8)/2
                if L9 < L8:
                    L9 = L8+1
                I5 = I5+1
                D9 = M9-M8

                if I5 > 50 or D9 < .001 or abs(L1-L7) < .01:
                    J = 1
                    print(J)

    print('teste4')
    P8 = L9
    A1 = (7.4412-((67-P8)/420)**2)*P8/(P8+235)
    P9 = 6.1075*10**A1
    if P8 >= 67:
        print(2930)
        A1 = (79.5-P8)**2/1.1-99
        P9 = P9+A1*9.807201*10**(-4)
    P5 = P9
    P8 = L8
    A1 = (7.4412-((67-P8)/420)**2)*P8/(P8+235)
    P9 = 6.1075*10**A1
    if P8 >= 67:
        print(2930)
        A1 = (79.5-P8)**2/1.1-99
        P9 = P9+A1*9.807201*10**(-4)
    P6 = P9
    A1 = 0.667
    if L8 < 0:
        A1 = .573
    P7 = P6-A1*(L9-L8)*L6/1006.7
    L3 = 0.622*P7/(L6-P7)
    L1 = P7/P5*100
    A1 = 2501.6+1.86*L9
    L4 = 1.006*L9+L3*A1
    L2 = .3483*L6/(L9+273.15)-.1316*P7/(L9+273.15)
    L7 = L1
    print(L7)
    return


def recovery_datas():
    # Inicializando as listas
    S = [[0 for _ in range(3)] for _ in range(22)]
    F = [[0 for _ in range(3)] for _ in range(22)]
    K = [[0 for _ in range(8)] for _ in range(22)]
    H = [[0 for _ in range(24)] for _ in range(22)]

    # Dados para S
    S = [
        (3, 1, 0.42),
        (4, 1, 0.42),
        (8, 1, 0.7),
        (12, 1, 1.05),
        (16, 1, 1.56),
        (20, 1, 2.06),
        (25, 1, 2.72),
        (25, 2, 2.72),
        (32, 1, 3.38),
        (32, 2, 3.38),
        (40, 2, 4.2),
        (50, 2, 5.02),
        (63, 2, 6),
        (80, 2, 8.12),
        (100, 2, 10.56),
        (125, 2, 13.16),
        (155, 2, 16.4),
        (180, 2, 18.3),
        (240, 2, 24.4),
        (310, 2, 30.5),
        (380, 2, 38.1),
        (550, 2, 54.9)
    ]

    F = [
        (0.1374, 0, 0),
        (0.1374, 0, 0),
        (0.1955, 0, 0),
        (0.2767, 0, 0),
        (0.4227, 0, 0),
        (0.4227, 0, 0),
        (0.5364, 0, 0),
        (2.62, 2.62, 2.36),
        (0.5364, 0, 0),
        (3.02, 3.02, 2.36),
        (4.1, 4.1, 3.76),
        (4.58, 4.42, 3.76),
        (5.06, 5.06, 4.64),
        (6.53, 6.53, 6.02),
        (8.84, 8.73, 8.73),
        (9.8, 10.0, 10.6),
        (10.8, 10.6, 10.6),
        (21.8, 15.6, 9.38),
        (24.9, 18.7, 12.45),
        (28.0, 20.2, 15.5),
        (31.0, 23.25, 20.2),
        (37.2, 27.9, 27.46)
    ]

    K = [
        (11, 22, 0, 0, 0, 0, 0, 0),
        (11, 12, 23, 0, 0, 0, 0, 0),
        (11, 12, 23, 0, 0, 0, 0, 0),
        (11, 12, 23, 0, 0, 0, 0, 0),
        (11, 12, 23, 0, 0, 0, 0, 0),
        (11, 12, 23, 0, 0, 0, 0, 0),
        (11, 12, 23, 0, 0, 0, 0, 0),
        (11, 12, 23, 0, 0, 0, 0, 0),
        (11, 12, 23, 0, 0, 0, 0, 0),
        (11, 12, 23, 0, 0, 0, 0, 0),
        (12, 22, 23, 0, 0, 0, 0, 0),
        (12, 22, 23, 0, 0, 0, 0, 0),
        (12, 22, 23, 0, 0, 0, 0, 0),
        (12, 22, 23, 0, 0, 0, 0, 0),
        (12, 13, 14, 22, 23, 24, 25, 0),
        (12, 13, 14, 22, 23, 24, 25, 0),
        (12, 13, 14, 22, 23, 24, 25, 0),
        (12, 13, 14, 22, 23, 24, 25, 0),
        (12, 13, 14, 22, 23, 24, 25, 0),
        (12, 13, 14, 22, 23, 24, 25, 0),
        (12, 13, 14, 22, 23, 24, 25, 0),
        (12, 13, 14, 15, 22, 23, 24, 25)
    ]

    A = [
        (0.765, 0.0788, -0.0049, 0.00006, 0.59,
         91.17, -70.125, 25.025, -2.93515, 1.025, 11),
        (1.4, 0.0464, -0.003099, 0.00005301, 0.54785,
         90.52, -49.5976, 15.7628, -1.6392, 1.3, 12),
        (1.4445782, 0.10105, -0.00637, 0.00008, 0.63787,
         98.74219, -70.214569, 24.78249, -2.86268, 1.025, 13),
        (1.7312489, 0.12399, -0.00806, 0.00012, 0.65889,
         103.89, -70.896, 24.80478, -2.83353, 1.025, 14),
        (2.0179701, 0.14691, -0.009748, 0.00016, 0.68,
         110.647934, -72.6226, 25.3825989, -2.89711, 1.025, 15),
        (1.232, 0.040832, -0.00272712, 0.000046649, 0.54785,
         79.6576, -43.645888, 13.871264, -1.442496, 1.3, 22),
        (1.064, 0.035264, -0.00235524, 0.000040288, 0.54785,
         68.7952, -37.694176, 11.979728, -1.245792, 1.3, 23),
        (2.2046938, 0.10419, -0.00672, 0.000089, 0.63166,
         119.7632, -72.507721, 21.711, -1.94488, 1.5125, 24),
        (2.583, 0.1237, -0.00797, 0.0001, 0.632,
         112.3177, -58.8479, 17.493088, -1.53318, 1.5, 25)
    ]

    H = [
        (1.0, 1.0, 0, 0, 0, 0, 0, 0, 1.0, 1.0, 0,
         0, 0, 0, 0, 0, 1.0, 1.0, 0, 0, 0, 0, 0, 0),
        (1.5, 1.5, 1.5, 0, 0, 0, 0, 0, 1.5, 1.5, 1.5,
         0, 0, 0, 0, 0, 1.5, 1.5, 1.5, 0, 0, 0, 0, 0),
        (1.5, 1.5, 1.5, 0, 0, 0, 0, 0, 1.5, 1.5, 1.5,
         0, 0, 0, 0, 0, 1.5, 1.5, 1.5, 0, 0, 0, 0, 0),
        (1.6, 1.6, 1.6, 0, 0, 0, 0, 0, 1.6, 1.6, 1.6,
         0, 0, 0, 0, 0, 1.6, 1.6, 1.6, 0, 0, 0, 0, 0),
        (1.8, 1.8, 1.8, 0, 0, 0, 0, 0, 1.8, 1.8, 1.8,
         0, 0, 0, 0, 0, 1.8, 1.8, 1.8, 0, 0, 0, 0, 0),
        (1.8, 1.8, 1.8, 0, 0, 0, 0, 0, 1.8, 1.8, 1.8,
         0, 0, 0, 0, 0, 1.8, 1.8, 1.8, 0, 0, 0, 0, 0),
        (1.9, 1.9, 1.9, 0, 0, 0, 0, 0, 1.9, 1.9, 1.9,
         0, 0, 0, 0, 0, 1.9, 1.9, 1.9, 0, 0, 0, 0, 0),
        (1.3, 1.3, 1.3, 0, 0, 0, 0, 0, 1.5, 1.5, 1.5,
         0, 0, 0, 0, 0, 1.7, 1.7, 1.7, 0, 0, 0, 0, 0),
        (1.9, 1.9, 1.9, 0, 0, 0, 0, 0, 1.9, 1.9, 1.9,
         0, 0, 0, 0, 0, 1.9, 1.9, 1.9, 0, 0, 0, 0, 0),
        (1.3, 1.3, 1.3, 0, 0, 0, 0, 0, 1.5, 1.5, 1.5,
         0, 0, 0, 0, 0, 1.7, 1.7, 1.7, 0, 0, 0, 0, 0),
        (1.9, 1.9, 1.9, 0, 0, 0, 0, 0, 2.1, 2.1, 2.1,
         0, 0, 0, 0, 0, 2.4, 2.4, 2.4, 0, 0, 0, 0, 0),
        (1.9, 1.9, 1.9, 0, 0, 0, 0, 0, 2.1, 2.1, 2.1,
         0, 0, 0, 0, 0, 2.4, 2.4, 2.4, 0, 0, 0, 0, 0),
        (1.9, 1.9, 1.9, 0, 0, 0, 0, 0, 2.1, 2.1, 2.1,
         0, 0, 0, 0, 0, 2.4, 2.4, 2.4, 0, 0, 0, 0, 0),
        (2.0, 2.0, 2.0, 0, 0, 0, 0, 0, 2.2, 2.2, 2.2,
         0, 0, 0, 0, 0, 2.6, 2.6, 2.6, 0, 0, 0, 0, 0),
        (2.1, 2.5, 3.0, 2.1, 2.1, 2.5, 3.0, 0,
         2.3, 2.7, 3.2, 2.3, 2.3, 2.7, 3.2, 0),
        (2.8, 3.2, 3.7, 2.8, 2.8, 3.2, 3.7, 0),
        (2.1, 2.5, 3.0, 2.1, 2.1, 2.5, 3.0, 0,
         2.3, 2.7, 3.2, 2.3, 2.3, 2.7, 3.2, 0),
        (2.8, 3.2, 3.7, 2.8, 2.8, 3.2, 3.7, 0),
        (2.1, 2.5, 3.0, 2.1, 2.1, 2.5, 3.0, 0,
         2.3, 2.7, 3.2, 2.3, 2.3, 2.7, 3.2, 0),
        (2.8, 3.2, 3.7, 2.8, 2.8, 3.2, 3.7, 0),
        (3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 0,
         3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 0),
        (3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 0),
        (3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 0,
         3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 0),
        (3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 0),
        (3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 0,
         3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 0),
        (4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 4.2, 0),
        (3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7,
         3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7, 3.7),
        (4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5, 4.5)
    ]

    return (S, F, K, H, A)


def rtp(H9=0, L2=0, L3=0, L4=0, J6=0, K8=0, j6=0, F8=0, K3=0, M=0, K0=0):
    data = recovery_datas()
    S = data[0]
    F = data[1]
    K = data[2]
    H = data[3]
    A = data[4]

    # Nome do arquivo
    filename = "C:\\Users\\projetosti.ALPINA\\Desktop\\engenharia\\Jorge\\COMPACTA\\BHP1\\DASG.txt"

    # Abrir o arquivo para leitura
    with open(filename, "r") as file:
        # Ler a linha do arquivo
        line = file.readline().strip()
        # Converter a linha em uma lista de valores
        values = list(map(float, line.split()))

    # Atribuir os valores às variáveis
    M0, I9, T1, Z, T2, T3, P1, T4, P0, W0, F0, K1, N0, N1, D1, N2, D6 = values

    if K1 == 31:
        K1 = 12
    if K1 == 32:
        K1 = 22
    if K1 == 33:
        K1 = 23
    # 200
    while True:
        L9 = T3
        L8 = T4
        L7 = P1
        L6 = P0
        L5 = H9
        analise_2030(L5, L6, L7, L8, L9)
        print('ok')
        T3 = L9
        T4 = L8
        P1 = L7
        P0 = L6
        H1 = L4
        X1 = L3
        R1 = L2
        I9 = 0
        C0 = 4.1868
        R0 = 1000
        G0 = M0*3600/(R0*N2)
        I8 = 0
        print('teste')

        if F0 == 0:
            I8 = 1
        if I8 != 0:
            if A[j6][11] == 22:
                # Código correspondente ao rótulo 5530
                print("Executando instrução do rótulo 5530")
                # Coloque aqui o código que corresponde ao rótulo 5530
            I7 = 1
            J9 = 0
            repeat_550 = 0
            while repeat_550 == 0:
                V6 = 0
                V7 = 0
                I3 = 0
                J9 = J9+I7
                if J9 < 22 and J9 >= 0:
                    W = W0
                    F = S[J9, 3]
                    R9 = 25
                    R8 = 6
                    R = G0/F
                    if R > R8:
                        R = G0/F
                        V = F*W
                        repeat_740 = 0
                        while repeat_740 == 0:
                            R3 = R1
                            L = V*R3/(M0/N2)
                            K9 = H1+Z*C0/L
                            H2 = H1+Z*C0/L
                            analise_4580(K9, P0)
                            T5 = K8
                            T6 = K8
                            X2 = L3
                            R2 = L2
                            R4 = (R1+R2)/2
                            D9 = abs(R3-R4)
                            if D9 > 0.0001:
                                R3 = R4
                            else:
                                analise_4880(T1, T2, C0, L, H1, P0)
                                if F8 != 0:
                                    repeat_740 = 1
                                if I3 != 0:
                                    # 980
                                    K2 = K[J9, J7]
                                    if K2 != 0:
                                        I6 = (N1-1)*8+J7
                                        H0 = H[J9, I6]
                                        analise_5200(
                                            K, J7, J9, R, A, N1, H, Z, D1, L)
                                if I8 != 0:
                                    J7 = 0
                                    J7 = J7+1
                                    if J7 <= 8:
                                        K2 = K[J9, J7]
                                        if K2 != 0:
                                            I6 = (N1-1)*8+J7
                                            H0 = H[J9, I6]
                                            analise_5200(
                                                K, J7, J9, R, A, N1, H, Z, D1, L)
                                            E9 = 0.02
                                            D9 = abs(K-K3)
                                            D = K*100/(L**M*K0)
                                            analise_5700(
                                                Z, F, J9, N1, V, R1, S, W, R3, A, J6, D6, R)
                                            R5 = R2
                                            if S[J9, 2] != 2:
                                                R5 = R1
                                            V5 = V*R3/R5
                                            ASU7 = analise_5860(
                                                Z, C0, L, H1, P0, J7, J9, R, A, N1, H, K, M, K0)
                                            # imprimira os resultados na tela
                                            print("JJ.RTP")
                                            print(
                                                f"{N2} X {S[J9][1]} {ASU7[1]}")
                                            print(f"Delta T: {ASU7[0]} K")
                                            print()
                                            print("Codigos dos operacoes :")
                                            print()
                                            print(
                                                "Calculo da potencia consumida do ventilador....... 1")
                                            print(
                                                "Novo numero de torres............................. 2")
                                            print(
                                                "Novo modelo , novo enchimento..................... 3")
                                            print(
                                                "Calculo com novos dados e o mesmo modelo.......... 4")
                                            print(
                                                "Novo calculo...................................... 5")
                                            print(
                                                "Fim............................................... 6")
                                            print()
                                            print(
                                                "Informe codigo da operacao desejada ")

                                        else:
                                            I7 = 1
                                            repeat_740 = 1
                                    else:
                                        I7 = 1
                                        repeat_740 = 1
                                if K1 != 0:
                                    print()
                                    # 1030
                                    J7 = 0
                                    repeat_1050 = 0
                                    while repeat_1050 == 0:
                                        J7 = J7+1
                                        if J7 > 8:
                                            repeat_740 = 1
                                            repeat_550 = 1
                                        else:
                                            K2 = K[J9, J7]
                                            if K2 == 0:
                                                repeat_740 = 1
                                                repeat_550 = 1
                                            if K2 == K1:
                                                I6 = (N1-1)*8+J7
                                                H0 = H[J9, I6]
                                                analise_5200(
                                                    K, J7, J9, R, A, N1, H, Z, D1, L)
                                            repeat_740 = 1
                                            repeat_550 = 1

                                J7 = 0
                                J7 = J7+1
                                if J7 > 8:
                                    repeat_740 = 1
                                    repeat_550 = 1

                                else:
                                    K2 = K[J9, J7]

                                if K2 == 0:
                                    repeat_740 = 1
                                    repeat_550 = 1

                                else:
                                    I6 = (N1-1)*8+J7
                                    H0 = H(J9, I6)
                                    analise_5200(K, J7, J9, R, A,
                                                 N1, H, Z, D1, L)

                                    J7 = 0
                                    repeat_1060 = 0
                                    while repeat_1060 == 0:
                                        J7 = J7+1
                                        if J7 > 8:
                                            repeat_1060 = 1
                                            repeat_740 = 1
                                            repeat_550 = 1
                                        else:
                                            K2 = K[J9, J7]
                                            if K2 == 0:
                                                repeat_1060 = 1
                                                repeat_740 = 1
                                                repeat_550 = 1
                                                if K2 == K1:
                                                    I6 = (N1-1)*8+J7
                                                    H0 = H[J9, I6]
                                                    analise_5200(
                                                        K, J7, J9, R, A, N1, H, Z, D1, L)
                                                    repeat_1060 = 1
                                                    repeat_740 = 1
                                                    repeat_550 = 1

                    else:
                        repeat_550 = 1

                else:
                    repeat_550 = 1

        else:
            # 440
            for J9 in range(22):  # range(22) vai de 0 a 21, equivalente a 1 a 22 no Basic
                W = W0
                if F0 == S[J9][2]:  # S[J9][2] é equivalente a S(J9,3) no Basic
                    F = F0
                    # 710
                    R = G0/F
                    V = F*W
                    R3 = R1
                    # 750
                    repeat_740 = 0
                    while repeat_740 == 0:
                        L = V*R3/(M0/N2)
                        K9 = H1+Z*C0/L
                        H2 = H1+Z*C0/L
                        analise_4580(K9, P0)
                        T5 = K8
                        T6 = K8
                        X2 = L3
                        R2 = L2
                        R4 = (R1+R2)/2
                        D9 = abs(R3-R4)
                        if D9 > 0.001:
                            R3 = R4
                        else:
                            if F8 != 0:
                                repeat_740 = 1
                                repeat_550 = 1
                                print()
                            if I3 != 0:
                                # 980
                                K2 = K[J9, J7]
                                if K2 != 0:
                                    I6 = (N1-1)*8+J7
                                    H0 = H[J9, I6]
                                    analise_5200(K, J7, J9, R, A,
                                                 N1, H, Z, D1, L)
                            if I8 != 0:
                                J7 = 0
                                J7 = J7+1
                                if J7 <= 8:
                                    K2 = K[J9, J7]
                                    if K2 != 0:
                                        I6 = (N1-1)*8+J7
                                        H0 = H[J9, I6]
                                        analise_5200(
                                            K, J7, J9, R, A, N1, H, Z, D1, L)
                                        E9 = 0.02
                                        D9 = abs(K-K3)
                                        D = K*100/(L**M*K0)
                                        analise_5700(
                                            Z, F, J9, N1, V, R1, S, W, R3, A, J6, D6, R)
                                        R5 = R2
                                        if S[J9, 2] != 2:
                                            R5 = R1
                                        V5 = V*R3/R5
                                        ASU7 = analise_5860(
                                            Z, C0, L, H1, P0, J7, J9, R, A, N1, H, K, M, K0)
                                        # imprimira os resultados na tela
                                        print("JJ.RTP")
                                        print(f"{N2} X {S[J9][1]} {ASU7[1]}")
                                        print(f"Delta T: {ASU7[0]} K")
                                        print()
                                        print("Codigos dos operacoes :")
                                        print()
                                        print(
                                            "Calculo da potencia consumida do ventilador....... 1")
                                        print(
                                            "Novo numero de torres............................. 2")
                                        print(
                                            "Novo modelo , novo enchimento..................... 3")
                                        print(
                                            "Calculo com novos dados e o mesmo modelo.......... 4")
                                        print(
                                            "Novo calculo...................................... 5")
                                        print(
                                            "Fim............................................... 6")
                                        print()
                                        print(
                                            "Informe codigo da operacao desejada ")
                            if K1 != 0:
                                print()
                                # 1030
                                J7 = 0
                                repeat_1050 = 0
                                while repeat_1050 == 0:
                                    J7 = J7+1
                                    if J7 > 8:
                                        repeat_740 = 1
                                        repeat_550 = 1
                                    else:
                                        K2 = K[J9, J7]
                                        if K2 == 0:
                                            repeat_740 = 1
                                            repeat_550 = 1
                                        if K2 == K1:
                                            I6 = (N1-1)*8+J7
                                            H0 = H[J9, I6]
                                            analise_5200(
                                                K, J7, J9, R, A, N1, H, Z, D1, L)
                                        repeat_740 = 1
                                        repeat_550 = 1
                            J7 = 0
                            J7 = J7+1
                            if J7 > 8:
                                repeat_740 = 1
                            else:
                                K2 = K[J9, J7]
                            if K2 == 0:
                                repeat_740 = 1
                            else:
                                I6 = (N1-1)*8+J7
                                H0 = H(J9, I6)
                                analise_5200(K, J7, J9, R, A, N1, H, Z, D1, L)
                                J7 = 0
                                repeat_1060 = 0
                                while repeat_1060 == 0:
                                    J7 = J7+1
                                    if J7 > 8:
                                        repeat_1060 = 1
                                        repeat_740 = 1
                                    else:
                                        K2 = K[J9, J7]
                                        if K2 == 0:
                                            repeat_1060 = 1
                                            repeat_740 = 1
                                            if K2 == K1:
                                                I6 = (N1-1)*8+J7
                                                H0 = H[J9, I6]
                                                analise_5200(
                                                    K, J7, J9, R, A, N1, H, Z, D1, L)
                                                repeat_1060 = 1
                                                repeat_740 = 1


rtp()
